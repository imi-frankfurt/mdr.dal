/*
 * This file is generated by jOOQ.
 */
package de.mig.mdr.dal.jooq.tables;


import de.mig.mdr.dal.jooq.Indexes;
import de.mig.mdr.dal.jooq.Keys;
import de.mig.mdr.dal.jooq.Public;
import de.mig.mdr.dal.jooq.enums.GrantType;
import de.mig.mdr.dal.jooq.tables.records.UserNamespaceGrantsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserNamespaceGrants extends TableImpl<UserNamespaceGrantsRecord> {

    private static final long serialVersionUID = 569361538;

    /**
     * The reference instance of <code>public.user_namespace_grants</code>
     */
    public static final UserNamespaceGrants USER_NAMESPACE_GRANTS = new UserNamespaceGrants();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserNamespaceGrantsRecord> getRecordType() {
        return UserNamespaceGrantsRecord.class;
    }

    /**
     * The column <code>public.user_namespace_grants.user_id</code>.
     */
    public final TableField<UserNamespaceGrantsRecord, Integer> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.user_namespace_grants.namespace_id</code>.
     */
    public final TableField<UserNamespaceGrantsRecord, Integer> NAMESPACE_ID = createField(DSL.name("namespace_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.user_namespace_grants.grant_type</code>.
     */
    public final TableField<UserNamespaceGrantsRecord, GrantType> GRANT_TYPE = createField(DSL.name("grant_type"), org.jooq.impl.SQLDataType.VARCHAR.asEnumDataType(de.mig.mdr.dal.jooq.enums.GrantType.class), this, "");

    /**
     * Create a <code>public.user_namespace_grants</code> table reference
     */
    public UserNamespaceGrants() {
        this(DSL.name("user_namespace_grants"), null);
    }

    /**
     * Create an aliased <code>public.user_namespace_grants</code> table reference
     */
    public UserNamespaceGrants(String alias) {
        this(DSL.name(alias), USER_NAMESPACE_GRANTS);
    }

    /**
     * Create an aliased <code>public.user_namespace_grants</code> table reference
     */
    public UserNamespaceGrants(Name alias) {
        this(alias, USER_NAMESPACE_GRANTS);
    }

    private UserNamespaceGrants(Name alias, Table<UserNamespaceGrantsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserNamespaceGrants(Name alias, Table<UserNamespaceGrantsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> UserNamespaceGrants(Table<O> child, ForeignKey<O, UserNamespaceGrantsRecord> key) {
        super(child, key, USER_NAMESPACE_GRANTS);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_NAMESPACE_GRANTS_NAMESPACE_ID_IDX, Indexes.USER_NAMESPACE_GRANTS_USER_ID_IDX);
    }

    @Override
    public List<UniqueKey<UserNamespaceGrantsRecord>> getKeys() {
        return Arrays.<UniqueKey<UserNamespaceGrantsRecord>>asList(Keys.USER_NAMESPACE_GRANTS_UNIQUE);
    }

    @Override
    public List<ForeignKey<UserNamespaceGrantsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserNamespaceGrantsRecord, ?>>asList(Keys.USER_NAMESPACE_GRANTS__USER_NAMESPACE_GRANTS_USER_FKEY, Keys.USER_NAMESPACE_GRANTS__USER_NAMESPACE_GRANTS_NAMESPACE_FKEY);
    }

    public MdrUser mdrUser() {
        return new MdrUser(this, Keys.USER_NAMESPACE_GRANTS__USER_NAMESPACE_GRANTS_USER_FKEY);
    }

    public Element element() {
        return new Element(this, Keys.USER_NAMESPACE_GRANTS__USER_NAMESPACE_GRANTS_NAMESPACE_FKEY);
    }

    @Override
    public UserNamespaceGrants as(String alias) {
        return new UserNamespaceGrants(DSL.name(alias), this);
    }

    @Override
    public UserNamespaceGrants as(Name alias) {
        return new UserNamespaceGrants(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserNamespaceGrants rename(String name) {
        return new UserNamespaceGrants(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserNamespaceGrants rename(Name name) {
        return new UserNamespaceGrants(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, GrantType> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
