/*
 * This file is generated by jOOQ.
 */
package de.mig.mdr.dal.jooq;


import de.mig.mdr.dal.jooq.enums.ElementType;
import de.mig.mdr.dal.jooq.routines.GetElementByUrn;
import de.mig.mdr.dal.jooq.routines.GetNamespaceScopedIdentifierByUrn;
import de.mig.mdr.dal.jooq.routines.GetScopedIdentifierByUrn;
import de.mig.mdr.dal.jooq.routines.Getelementtype;
import de.mig.mdr.dal.jooq.routines.ToTsvectorMultilang;
import de.mig.mdr.dal.jooq.routines.Urn;
import de.mig.mdr.dal.jooq.tables.GetDefinitionByUrn;
import de.mig.mdr.dal.jooq.tables.GetSlotByUrn;
import de.mig.mdr.dal.jooq.tables.GetValueDomainByUrn;
import de.mig.mdr.dal.jooq.tables.records.ElementRecord;
import de.mig.mdr.dal.jooq.tables.records.GetDefinitionByUrnRecord;
import de.mig.mdr.dal.jooq.tables.records.GetSlotByUrnRecord;
import de.mig.mdr.dal.jooq.tables.records.GetValueDomainByUrnRecord;
import de.mig.mdr.dal.jooq.tables.records.ScopedIdentifierRecord;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.Result;


/**
 * Convenience access to all stored procedures and functions in public
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>public.get_element_by_urn</code>
     */
    public static ElementRecord getElementByUrn(Configuration configuration, String urn) {
        GetElementByUrn f = new GetElementByUrn();
        f.setUrn(urn);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.get_element_by_urn</code> as a field.
     */
    public static Field<ElementRecord> getElementByUrn(String urn) {
        GetElementByUrn f = new GetElementByUrn();
        f.setUrn(urn);

        return f.asField();
    }

    /**
     * Get <code>public.get_element_by_urn</code> as a field.
     */
    public static Field<ElementRecord> getElementByUrn(Field<String> urn) {
        GetElementByUrn f = new GetElementByUrn();
        f.setUrn(urn);

        return f.asField();
    }

    /**
     * Call <code>public.get_namespace_scoped_identifier_by_urn</code>
     */
    public static ScopedIdentifierRecord getNamespaceScopedIdentifierByUrn(Configuration configuration, String urn) {
        GetNamespaceScopedIdentifierByUrn f = new GetNamespaceScopedIdentifierByUrn();
        f.setUrn(urn);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.get_namespace_scoped_identifier_by_urn</code> as a field.
     */
    public static Field<ScopedIdentifierRecord> getNamespaceScopedIdentifierByUrn(String urn) {
        GetNamespaceScopedIdentifierByUrn f = new GetNamespaceScopedIdentifierByUrn();
        f.setUrn(urn);

        return f.asField();
    }

    /**
     * Get <code>public.get_namespace_scoped_identifier_by_urn</code> as a field.
     */
    public static Field<ScopedIdentifierRecord> getNamespaceScopedIdentifierByUrn(Field<String> urn) {
        GetNamespaceScopedIdentifierByUrn f = new GetNamespaceScopedIdentifierByUrn();
        f.setUrn(urn);

        return f.asField();
    }

    /**
     * Call <code>public.get_scoped_identifier_by_urn</code>
     */
    public static ScopedIdentifierRecord getScopedIdentifierByUrn(Configuration configuration, String urn) {
        GetScopedIdentifierByUrn f = new GetScopedIdentifierByUrn();
        f.setUrn(urn);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.get_scoped_identifier_by_urn</code> as a field.
     */
    public static Field<ScopedIdentifierRecord> getScopedIdentifierByUrn(String urn) {
        GetScopedIdentifierByUrn f = new GetScopedIdentifierByUrn();
        f.setUrn(urn);

        return f.asField();
    }

    /**
     * Get <code>public.get_scoped_identifier_by_urn</code> as a field.
     */
    public static Field<ScopedIdentifierRecord> getScopedIdentifierByUrn(Field<String> urn) {
        GetScopedIdentifierByUrn f = new GetScopedIdentifierByUrn();
        f.setUrn(urn);

        return f.asField();
    }

    /**
     * Call <code>public.getelementtype</code>
     */
    public static ElementType getelementtype(Configuration configuration, Integer id) {
        Getelementtype f = new Getelementtype();
        f.setId(id);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.getelementtype</code> as a field.
     */
    public static Field<ElementType> getelementtype(Integer id) {
        Getelementtype f = new Getelementtype();
        f.setId(id);

        return f.asField();
    }

    /**
     * Get <code>public.getelementtype</code> as a field.
     */
    public static Field<ElementType> getelementtype(Field<Integer> id) {
        Getelementtype f = new Getelementtype();
        f.setId(id);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Object toTsvectorMultilang(Configuration configuration, String __1) {
        ToTsvectorMultilang f = new ToTsvectorMultilang();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> toTsvectorMultilang(String __1) {
        ToTsvectorMultilang f = new ToTsvectorMultilang();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Please define an explicit {@link org.jooq.Binding} to specify how this type should be handled. Deprecation can be turned off using {@literal <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @java.lang.Deprecated
    public static Field<Object> toTsvectorMultilang(Field<String> __1) {
        ToTsvectorMultilang f = new ToTsvectorMultilang();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.urn</code>
     */
    public static String urn(Configuration configuration, ScopedIdentifierRecord sc) {
        Urn f = new Urn();
        f.setSc(sc);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.urn</code> as a field.
     */
    public static Field<String> urn(ScopedIdentifierRecord sc) {
        Urn f = new Urn();
        f.setSc(sc);

        return f.asField();
    }

    /**
     * Get <code>public.urn</code> as a field.
     */
    public static Field<String> urn(Field<ScopedIdentifierRecord> sc) {
        Urn f = new Urn();
        f.setSc(sc);

        return f.asField();
    }

    /**
     * Call <code>public.get_definition_by_urn</code>.
     */
    public static Result<GetDefinitionByUrnRecord> getDefinitionByUrn(Configuration configuration, String urn) {
        return configuration.dsl().selectFrom(de.mig.mdr.dal.jooq.tables.GetDefinitionByUrn.GET_DEFINITION_BY_URN.call(urn)).fetch();
    }

    /**
     * Get <code>public.get_definition_by_urn</code> as a table.
     */
    public static GetDefinitionByUrn getDefinitionByUrn(String urn) {
        return de.mig.mdr.dal.jooq.tables.GetDefinitionByUrn.GET_DEFINITION_BY_URN.call(urn);
    }

    /**
     * Get <code>public.get_definition_by_urn</code> as a table.
     */
    public static GetDefinitionByUrn getDefinitionByUrn(Field<String> urn) {
        return de.mig.mdr.dal.jooq.tables.GetDefinitionByUrn.GET_DEFINITION_BY_URN.call(urn);
    }

    /**
     * Call <code>public.get_slot_by_urn</code>.
     */
    public static Result<GetSlotByUrnRecord> getSlotByUrn(Configuration configuration, String urn) {
        return configuration.dsl().selectFrom(de.mig.mdr.dal.jooq.tables.GetSlotByUrn.GET_SLOT_BY_URN.call(urn)).fetch();
    }

    /**
     * Get <code>public.get_slot_by_urn</code> as a table.
     */
    public static GetSlotByUrn getSlotByUrn(String urn) {
        return de.mig.mdr.dal.jooq.tables.GetSlotByUrn.GET_SLOT_BY_URN.call(urn);
    }

    /**
     * Get <code>public.get_slot_by_urn</code> as a table.
     */
    public static GetSlotByUrn getSlotByUrn(Field<String> urn) {
        return de.mig.mdr.dal.jooq.tables.GetSlotByUrn.GET_SLOT_BY_URN.call(urn);
    }

    /**
     * Call <code>public.get_value_domain_by_urn</code>.
     */
    public static Result<GetValueDomainByUrnRecord> getValueDomainByUrn(Configuration configuration, String urn) {
        return configuration.dsl().selectFrom(de.mig.mdr.dal.jooq.tables.GetValueDomainByUrn.GET_VALUE_DOMAIN_BY_URN.call(urn)).fetch();
    }

    /**
     * Get <code>public.get_value_domain_by_urn</code> as a table.
     */
    public static GetValueDomainByUrn getValueDomainByUrn(String urn) {
        return de.mig.mdr.dal.jooq.tables.GetValueDomainByUrn.GET_VALUE_DOMAIN_BY_URN.call(urn);
    }

    /**
     * Get <code>public.get_value_domain_by_urn</code> as a table.
     */
    public static GetValueDomainByUrn getValueDomainByUrn(Field<String> urn) {
        return de.mig.mdr.dal.jooq.tables.GetValueDomainByUrn.GET_VALUE_DOMAIN_BY_URN.call(urn);
    }
}
