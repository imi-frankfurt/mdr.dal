/*
 * This file is generated by jOOQ.
 */
package de.mig.mdr.dal.jooq.tables.records;


import de.mig.mdr.dal.jooq.tables.Slot;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SlotRecord extends UpdatableRecordImpl<SlotRecord> implements Record4<Integer, Integer, String, String> {

    private static final long serialVersionUID = -801562548;

    /**
     * Setter for <code>public.slot.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.slot.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.slot.scoped_identifier_id</code>.
     */
    public void setScopedIdentifierId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.slot.scoped_identifier_id</code>.
     */
    public Integer getScopedIdentifierId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.slot.key</code>.
     */
    public void setKey(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.slot.key</code>.
     */
    public String getKey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.slot.value</code>.
     */
    public void setValue(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.slot.value</code>.
     */
    public String getValue() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Slot.SLOT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Slot.SLOT.SCOPED_IDENTIFIER_ID;
    }

    @Override
    public Field<String> field3() {
        return Slot.SLOT.KEY;
    }

    @Override
    public Field<String> field4() {
        return Slot.SLOT.VALUE;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getScopedIdentifierId();
    }

    @Override
    public String component3() {
        return getKey();
    }

    @Override
    public String component4() {
        return getValue();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getScopedIdentifierId();
    }

    @Override
    public String value3() {
        return getKey();
    }

    @Override
    public String value4() {
        return getValue();
    }

    @Override
    public SlotRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SlotRecord value2(Integer value) {
        setScopedIdentifierId(value);
        return this;
    }

    @Override
    public SlotRecord value3(String value) {
        setKey(value);
        return this;
    }

    @Override
    public SlotRecord value4(String value) {
        setValue(value);
        return this;
    }

    @Override
    public SlotRecord values(Integer value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SlotRecord
     */
    public SlotRecord() {
        super(Slot.SLOT);
    }

    /**
     * Create a detached, initialised SlotRecord
     */
    public SlotRecord(Integer id, Integer scopedIdentifierId, String key, String value) {
        super(Slot.SLOT);

        set(0, id);
        set(1, scopedIdentifierId);
        set(2, key);
        set(3, value);
    }
}
