/*
 * This file is generated by jOOQ.
 */
package de.mig.mdr.dal.jooq.tables.records;


import de.mig.mdr.dal.jooq.tables.UserSourceCredentials;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserSourceCredentialsRecord extends UpdatableRecordImpl<UserSourceCredentialsRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = 612780930;

    /**
     * Setter for <code>public.user_source_credentials.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.user_source_credentials.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.user_source_credentials.credential</code>.
     */
    public void setCredential(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.user_source_credentials.credential</code>.
     */
    public String getCredential() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.user_source_credentials.source_id</code>.
     */
    public void setSourceId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.user_source_credentials.source_id</code>.
     */
    public Integer getSourceId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return UserSourceCredentials.USER_SOURCE_CREDENTIALS.USER_ID;
    }

    @Override
    public Field<String> field2() {
        return UserSourceCredentials.USER_SOURCE_CREDENTIALS.CREDENTIAL;
    }

    @Override
    public Field<Integer> field3() {
        return UserSourceCredentials.USER_SOURCE_CREDENTIALS.SOURCE_ID;
    }

    @Override
    public Integer component1() {
        return getUserId();
    }

    @Override
    public String component2() {
        return getCredential();
    }

    @Override
    public Integer component3() {
        return getSourceId();
    }

    @Override
    public Integer value1() {
        return getUserId();
    }

    @Override
    public String value2() {
        return getCredential();
    }

    @Override
    public Integer value3() {
        return getSourceId();
    }

    @Override
    public UserSourceCredentialsRecord value1(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserSourceCredentialsRecord value2(String value) {
        setCredential(value);
        return this;
    }

    @Override
    public UserSourceCredentialsRecord value3(Integer value) {
        setSourceId(value);
        return this;
    }

    @Override
    public UserSourceCredentialsRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserSourceCredentialsRecord
     */
    public UserSourceCredentialsRecord() {
        super(UserSourceCredentials.USER_SOURCE_CREDENTIALS);
    }

    /**
     * Create a detached, initialised UserSourceCredentialsRecord
     */
    public UserSourceCredentialsRecord(Integer userId, String credential, Integer sourceId) {
        super(UserSourceCredentials.USER_SOURCE_CREDENTIALS);

        set(0, userId);
        set(1, credential);
        set(2, sourceId);
    }
}
