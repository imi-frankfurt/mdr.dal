/*
 * This file is generated by jOOQ.
 */
package de.mig.mdr.dal.jooq.tables.daos;


import de.mig.mdr.dal.jooq.tables.Definition;
import de.mig.mdr.dal.jooq.tables.records.DefinitionRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DefinitionDao extends DAOImpl<DefinitionRecord, de.mig.mdr.dal.jooq.tables.pojos.Definition, Integer> {

    /**
     * Create a new DefinitionDao without any configuration
     */
    public DefinitionDao() {
        super(Definition.DEFINITION, de.mig.mdr.dal.jooq.tables.pojos.Definition.class);
    }

    /**
     * Create a new DefinitionDao with an attached configuration
     */
    public DefinitionDao(Configuration configuration) {
        super(Definition.DEFINITION, de.mig.mdr.dal.jooq.tables.pojos.Definition.class, configuration);
    }

    @Override
    public Integer getId(de.mig.mdr.dal.jooq.tables.pojos.Definition object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Definition> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Definition.DEFINITION.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Definition> fetchById(Integer... values) {
        return fetch(Definition.DEFINITION.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public de.mig.mdr.dal.jooq.tables.pojos.Definition fetchOneById(Integer value) {
        return fetchOne(Definition.DEFINITION.ID, value);
    }

    /**
     * Fetch records that have <code>scoped_identifier_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Definition> fetchRangeOfScopedIdentifierId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Definition.DEFINITION.SCOPED_IDENTIFIER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>scoped_identifier_id IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Definition> fetchByScopedIdentifierId(Integer... values) {
        return fetch(Definition.DEFINITION.SCOPED_IDENTIFIER_ID, values);
    }

    /**
     * Fetch records that have <code>designation BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Definition> fetchRangeOfDesignation(String lowerInclusive, String upperInclusive) {
        return fetchRange(Definition.DEFINITION.DESIGNATION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>designation IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Definition> fetchByDesignation(String... values) {
        return fetch(Definition.DEFINITION.DESIGNATION, values);
    }

    /**
     * Fetch records that have <code>definition BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Definition> fetchRangeOfDefinition(String lowerInclusive, String upperInclusive) {
        return fetchRange(Definition.DEFINITION.DEFINITION_, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>definition IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Definition> fetchByDefinition(String... values) {
        return fetch(Definition.DEFINITION.DEFINITION_, values);
    }

    /**
     * Fetch records that have <code>language BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Definition> fetchRangeOfLanguage(String lowerInclusive, String upperInclusive) {
        return fetchRange(Definition.DEFINITION.LANGUAGE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>language IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Definition> fetchByLanguage(String... values) {
        return fetch(Definition.DEFINITION.LANGUAGE, values);
    }

    /**
     * Fetch records that have <code>element_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Definition> fetchRangeOfElementId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Definition.DEFINITION.ELEMENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>element_id IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Definition> fetchByElementId(Integer... values) {
        return fetch(Definition.DEFINITION.ELEMENT_ID, values);
    }
}
