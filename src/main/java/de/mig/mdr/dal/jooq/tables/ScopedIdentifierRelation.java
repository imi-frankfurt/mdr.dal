/*
 * This file is generated by jOOQ.
 */
package de.mig.mdr.dal.jooq.tables;


import de.mig.mdr.dal.jooq.Keys;
import de.mig.mdr.dal.jooq.Public;
import de.mig.mdr.dal.jooq.enums.RelationType;
import de.mig.mdr.dal.jooq.tables.records.ScopedIdentifierRelationRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScopedIdentifierRelation extends TableImpl<ScopedIdentifierRelationRecord> {

    private static final long serialVersionUID = -1715443518;

    /**
     * The reference instance of <code>public.scoped_identifier_relation</code>
     */
    public static final ScopedIdentifierRelation SCOPED_IDENTIFIER_RELATION = new ScopedIdentifierRelation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScopedIdentifierRelationRecord> getRecordType() {
        return ScopedIdentifierRelationRecord.class;
    }

    /**
     * The column <code>public.scoped_identifier_relation.left_identifier_id</code>.
     */
    public final TableField<ScopedIdentifierRelationRecord, Integer> LEFT_IDENTIFIER_ID = createField(DSL.name("left_identifier_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.scoped_identifier_relation.right_identifier_id</code>.
     */
    public final TableField<ScopedIdentifierRelationRecord, Integer> RIGHT_IDENTIFIER_ID = createField(DSL.name("right_identifier_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.scoped_identifier_relation.relation</code>.
     */
    public final TableField<ScopedIdentifierRelationRecord, RelationType> RELATION = createField(DSL.name("relation"), org.jooq.impl.SQLDataType.VARCHAR.nullable(false).asEnumDataType(de.mig.mdr.dal.jooq.enums.RelationType.class), this, "");

    /**
     * The column <code>public.scoped_identifier_relation.created_by</code>.
     */
    public final TableField<ScopedIdentifierRelationRecord, Integer> CREATED_BY = createField(DSL.name("created_by"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.scoped_identifier_relation.created_at</code>.
     */
    public final TableField<ScopedIdentifierRelationRecord, LocalDateTime> CREATED_AT = createField(DSL.name("created_at"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * Create a <code>public.scoped_identifier_relation</code> table reference
     */
    public ScopedIdentifierRelation() {
        this(DSL.name("scoped_identifier_relation"), null);
    }

    /**
     * Create an aliased <code>public.scoped_identifier_relation</code> table reference
     */
    public ScopedIdentifierRelation(String alias) {
        this(DSL.name(alias), SCOPED_IDENTIFIER_RELATION);
    }

    /**
     * Create an aliased <code>public.scoped_identifier_relation</code> table reference
     */
    public ScopedIdentifierRelation(Name alias) {
        this(alias, SCOPED_IDENTIFIER_RELATION);
    }

    private ScopedIdentifierRelation(Name alias, Table<ScopedIdentifierRelationRecord> aliased) {
        this(alias, aliased, null);
    }

    private ScopedIdentifierRelation(Name alias, Table<ScopedIdentifierRelationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> ScopedIdentifierRelation(Table<O> child, ForeignKey<O, ScopedIdentifierRelationRecord> key) {
        super(child, key, SCOPED_IDENTIFIER_RELATION);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public UniqueKey<ScopedIdentifierRelationRecord> getPrimaryKey() {
        return Keys.SCOPED_IDENTIFIER_RELATION_PKEY;
    }

    @Override
    public List<UniqueKey<ScopedIdentifierRelationRecord>> getKeys() {
        return Arrays.<UniqueKey<ScopedIdentifierRelationRecord>>asList(Keys.SCOPED_IDENTIFIER_RELATION_PKEY);
    }

    @Override
    public List<ForeignKey<ScopedIdentifierRelationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ScopedIdentifierRelationRecord, ?>>asList(Keys.SCOPED_IDENTIFIER_RELATION__SCOPED_IDENTIFIER_RELATION_LEFT_IDENTIFIER_ID_FKEY, Keys.SCOPED_IDENTIFIER_RELATION__SCOPED_IDENTIFIER_RELATION_RIGHT_IDENTIFIER_ID_FKEY, Keys.SCOPED_IDENTIFIER_RELATION__SCOPED_IDENTIFIER_RELATION_CREATED_BY_FKEY);
    }

    public ScopedIdentifier scopedIdentifierRelationLeftIdentifierIdFkey() {
        return new ScopedIdentifier(this, Keys.SCOPED_IDENTIFIER_RELATION__SCOPED_IDENTIFIER_RELATION_LEFT_IDENTIFIER_ID_FKEY);
    }

    public ScopedIdentifier scopedIdentifierRelationRightIdentifierIdFkey() {
        return new ScopedIdentifier(this, Keys.SCOPED_IDENTIFIER_RELATION__SCOPED_IDENTIFIER_RELATION_RIGHT_IDENTIFIER_ID_FKEY);
    }

    public MdrUser mdrUser() {
        return new MdrUser(this, Keys.SCOPED_IDENTIFIER_RELATION__SCOPED_IDENTIFIER_RELATION_CREATED_BY_FKEY);
    }

    @Override
    public ScopedIdentifierRelation as(String alias) {
        return new ScopedIdentifierRelation(DSL.name(alias), this);
    }

    @Override
    public ScopedIdentifierRelation as(Name alias) {
        return new ScopedIdentifierRelation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ScopedIdentifierRelation rename(String name) {
        return new ScopedIdentifierRelation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ScopedIdentifierRelation rename(Name name) {
        return new ScopedIdentifierRelation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, RelationType, Integer, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
