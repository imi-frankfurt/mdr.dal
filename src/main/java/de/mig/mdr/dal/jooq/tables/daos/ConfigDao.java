/*
 * This file is generated by jOOQ.
 */
package de.mig.mdr.dal.jooq.tables.daos;


import de.mig.mdr.dal.jooq.tables.Config;
import de.mig.mdr.dal.jooq.tables.records.ConfigRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.JSON;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigDao extends DAOImpl<ConfigRecord, de.mig.mdr.dal.jooq.tables.pojos.Config, Integer> {

    /**
     * Create a new ConfigDao without any configuration
     */
    public ConfigDao() {
        super(Config.CONFIG, de.mig.mdr.dal.jooq.tables.pojos.Config.class);
    }

    /**
     * Create a new ConfigDao with an attached configuration
     */
    public ConfigDao(Configuration configuration) {
        super(Config.CONFIG, de.mig.mdr.dal.jooq.tables.pojos.Config.class, configuration);
    }

    @Override
    public Integer getId(de.mig.mdr.dal.jooq.tables.pojos.Config object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Config> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Config.CONFIG.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Config> fetchById(Integer... values) {
        return fetch(Config.CONFIG.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public de.mig.mdr.dal.jooq.tables.pojos.Config fetchOneById(Integer value) {
        return fetchOne(Config.CONFIG.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Config> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Config.CONFIG.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Config> fetchByName(String... values) {
        return fetch(Config.CONFIG.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>name = value</code>
     */
    public de.mig.mdr.dal.jooq.tables.pojos.Config fetchOneByName(String value) {
        return fetchOne(Config.CONFIG.NAME, value);
    }

    /**
     * Fetch records that have <code>value BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Config> fetchRangeOfValue(JSON lowerInclusive, JSON upperInclusive) {
        return fetchRange(Config.CONFIG.VALUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>value IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.Config> fetchByValue(JSON... values) {
        return fetch(Config.CONFIG.VALUE, values);
    }
}
