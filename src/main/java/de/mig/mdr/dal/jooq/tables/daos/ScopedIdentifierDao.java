/*
 * This file is generated by jOOQ.
 */
package de.mig.mdr.dal.jooq.tables.daos;


import de.mig.mdr.dal.jooq.enums.ElementType;
import de.mig.mdr.dal.jooq.enums.Status;
import de.mig.mdr.dal.jooq.tables.ScopedIdentifier;
import de.mig.mdr.dal.jooq.tables.records.ScopedIdentifierRecord;

import java.util.List;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.13.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScopedIdentifierDao extends DAOImpl<ScopedIdentifierRecord, de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier, Integer> {

    /**
     * Create a new ScopedIdentifierDao without any configuration
     */
    public ScopedIdentifierDao() {
        super(ScopedIdentifier.SCOPED_IDENTIFIER, de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier.class);
    }

    /**
     * Create a new ScopedIdentifierDao with an attached configuration
     */
    public ScopedIdentifierDao(Configuration configuration) {
        super(ScopedIdentifier.SCOPED_IDENTIFIER, de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier.class, configuration);
    }

    @Override
    public Integer getId(de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ScopedIdentifier.SCOPED_IDENTIFIER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchById(Integer... values) {
        return fetch(ScopedIdentifier.SCOPED_IDENTIFIER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier fetchOneById(Integer value) {
        return fetchOne(ScopedIdentifier.SCOPED_IDENTIFIER.ID, value);
    }

    /**
     * Fetch records that have <code>element_type BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchRangeOfElementType(ElementType lowerInclusive, ElementType upperInclusive) {
        return fetchRange(ScopedIdentifier.SCOPED_IDENTIFIER.ELEMENT_TYPE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>element_type IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchByElementType(ElementType... values) {
        return fetch(ScopedIdentifier.SCOPED_IDENTIFIER.ELEMENT_TYPE, values);
    }

    /**
     * Fetch records that have <code>version BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchRangeOfVersion(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ScopedIdentifier.SCOPED_IDENTIFIER.VERSION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>version IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchByVersion(Integer... values) {
        return fetch(ScopedIdentifier.SCOPED_IDENTIFIER.VERSION, values);
    }

    /**
     * Fetch records that have <code>identifier BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchRangeOfIdentifier(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ScopedIdentifier.SCOPED_IDENTIFIER.IDENTIFIER, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>identifier IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchByIdentifier(Integer... values) {
        return fetch(ScopedIdentifier.SCOPED_IDENTIFIER.IDENTIFIER, values);
    }

    /**
     * Fetch records that have <code>url BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchRangeOfUrl(String lowerInclusive, String upperInclusive) {
        return fetchRange(ScopedIdentifier.SCOPED_IDENTIFIER.URL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>url IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchByUrl(String... values) {
        return fetch(ScopedIdentifier.SCOPED_IDENTIFIER.URL, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchRangeOfCreatedBy(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ScopedIdentifier.SCOPED_IDENTIFIER.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchByCreatedBy(Integer... values) {
        return fetch(ScopedIdentifier.SCOPED_IDENTIFIER.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchRangeOfStatus(Status lowerInclusive, Status upperInclusive) {
        return fetchRange(ScopedIdentifier.SCOPED_IDENTIFIER.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchByStatus(Status... values) {
        return fetch(ScopedIdentifier.SCOPED_IDENTIFIER.STATUS, values);
    }

    /**
     * Fetch records that have <code>element_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchRangeOfElementId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ScopedIdentifier.SCOPED_IDENTIFIER.ELEMENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>element_id IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchByElementId(Integer... values) {
        return fetch(ScopedIdentifier.SCOPED_IDENTIFIER.ELEMENT_ID, values);
    }

    /**
     * Fetch records that have <code>namespace_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchRangeOfNamespaceId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(ScopedIdentifier.SCOPED_IDENTIFIER.NAMESPACE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>namespace_id IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchByNamespaceId(Integer... values) {
        return fetch(ScopedIdentifier.SCOPED_IDENTIFIER.NAMESPACE_ID, values);
    }

    /**
     * Fetch records that have <code>uuid BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchRangeOfUuid(UUID lowerInclusive, UUID upperInclusive) {
        return fetchRange(ScopedIdentifier.SCOPED_IDENTIFIER.UUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>uuid IN (values)</code>
     */
    public List<de.mig.mdr.dal.jooq.tables.pojos.ScopedIdentifier> fetchByUuid(UUID... values) {
        return fetch(ScopedIdentifier.SCOPED_IDENTIFIER.UUID, values);
    }
}
